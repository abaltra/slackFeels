<!DOCTYPE html>
<html ng-app="sailng" ng-controller="AppCtrl">
<head>
  <base href="/">
  <title>slackfeels</title>

  <!-- Viewport mobile tag for sensible mobile support -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


  <!--
    Stylesheets and Preprocessors
    ==============================

    You can always bring in CSS files manually with `<link>` tags, or asynchronously
    using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
    of Sails' conventional asset pipeline (boilerplate Gruntfile).

    By default, stylesheets from your `assets/styles` folder are included
    here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
    are supported. In production, your styles will be minified and concatenated into
    a single file.

    To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
    For example, here are a few things you could do:

      + Change the order of your CSS files
      + Import stylesheets from other directories
      + Use a different or additional preprocessor, like SASS, SCSS or Stylus
  -->

  <link href='http://fonts.googleapis.com/css?family=Open+Sans:400,700,800,300' rel='stylesheet' type='text/css'>

  <!--STYLES-->
  <link rel="stylesheet" href="/bower_components/angular/angular-csp.css">
  <link rel="stylesheet" href="/bower_components/bootstrap/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="/bower_components/fontawesome/css/font-awesome.min.css">
  <link rel="stylesheet" href="/bower_components/angular-ui-notification/dist/angular-ui-notification.min.css">
  <link rel="stylesheet" href="/bower_components/sweetalert/lib/sweet-alert.css">
  <link rel="stylesheet" href="/bower_components/ng-table/ng-table.css">
  <link rel="stylesheet" href="/bower_components/angular-loading-bar/build/loading-bar.min.css">
  <link rel="stylesheet" href="/bower_components/angular-chart.js/dist/angular-chart.css">
  <link rel="stylesheet" href="/styles/importer.css">
  <!--STYLES END-->
</head>

<body>
<%- body %>



<!--

  Client-side Javascript
  ========================

  You can always bring in JS files manually with `script` tags, or asynchronously
  on the client using a solution like AMD (RequireJS).  Or, if you like, you can
  take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

  By default, files in your `assets/js` folder are included here
  automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
  CoffeeScript (.coffee) are supported. In production, your scripts will be minified
  and concatenated into a single file.

  To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
  For example, here are a few things you could do:

    + Change the order of your scripts
    + Import scripts from other directories
    + Use a different preprocessor, like TypeScript

-->

<!--SCRIPTS-->
<script src="/js/fb-appended-hash-bug-fix.js"></script>
<!--
<script src="/bower_components/socket.io-client/socket.io.js"></script>
<script src="/js/dependencies/sails.io.js"></script>
-->
<script src="/bower_components/angular/angular.js"></script>
<script src="/bower_components/angular-resource/angular-resource.min.js"></script>
<script src="/bower_components/angular-bootstrap/ui-bootstrap-tpls.min.js"></script>
<script src="/bower_components/angular-ui-router/release/angular-ui-router.min.js"></script>
<script src="/bower_components/angular-ui-utils/ui-utils.min.js"></script>
<!--
<script src="/bower_components/angular-sails/dist/angular-sails.js"></script>
-->
<script src="/bower_components/lodash/dist/lodash.min.js"></script>
<script src="/bower_components/moment/min/moment-with-locales.min.js"></script>
<script src="/bower_components/angular-moment/angular-moment.min.js"></script>
<script src="/bower_components/angular-translate/angular-translate.min.js"></script>
<script src="/bower_components/angular-translate-loader-static-files/angular-translate-loader-static-files.min.js"></script>
<script src="/bower_components/ng-table/ng-table.js"></script>
<script src="/bower_components/jquery/dist/jquery.min.js"></script>
<script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
<script src="/bower_components/angular-animate/angular-animate.min.js"></script>
<script src="/bower_components/angular-mocks/angular-mocks.js"></script>
<script src="/bower_components/angular-route/angular-route.min.js"></script>
<script src="/bower_components/angular-rx-data-table/dist/scripts/rx-data-table.js"></script>
<script src="/bower_components/angular-sanitize/angular-sanitize.min.js"></script>
<script src="/bower_components/angular-ui-utils/ui-utils-ieshiv.min.js"></script>
<script src="/bower_components/angular-xeditable/dist/js/xeditable.min.js"></script>
<script src="/bower_components/es5-shim/es5-sham.min.js"></script>
<script src="/bower_components/es5-shim/es5-shim.min.js"></script>
<script src="/bower_components/json3/lib/json3.min.js"></script>
<script src="/bower_components/lodash/dist/lodash.compat.min.js"></script>
<script src="/bower_components/lodash/dist/lodash.underscore.min.js"></script>
<script src="/bower_components/angular-ui-notification/dist/angular-ui-notification.min.js"></script>
<script src="/bower_components/angular-input-modified/dist/angular-input-modified.min.js"></script>
<script src="/bower_components/angular-form-validation/dist/angular-form-validation.min.js"></script>
<script src="/bower_components/angular-filter/dist/angular-filter.min.js"></script>
<script src="/bower_components/sweetalert/lib/sweet-alert.min.js"></script>
<script src="/bower_components/angular-sweetalert/SweetAlert.min.js"></script>
<script src="/bower_components/angular-file-upload/angular-file-upload.min.js"></script>
<script src="/bower_components/angular-cookies/angular-cookies.min.js"></script>
<script src="/bower_components/angular-loading-bar/build/loading-bar.min.js"></script>
<script src="/bower_components/Chart.js/Chart.min.js"></script>
<script src="/bower_components/angular-chart.js/dist/angular-chart.js"></script>

<!-- -->
<script src="/src/common/routingConfig.js"></script>
<!-- directives -->
<script src="/src/common/directives/blink.js"></script>
<script src="/src/common/directives/thumb.js"></script>
<script src="/src/common/directives/index.js"></script>
<!-- models -->
<script src="/src/common/models/User.js"></script>
<script src="/src/common/models/index.js"></script>
<!-- services -->
<script src="/src/common/services/config.js"></script>
<script src="/src/common/services/lodash.js"></script>
<script src="/src/common/services/title.js"></script>
<script src="/src/common/services/utils.js"></script>
<script src="/src/common/services/auth.js"></script>
<script src="/src/common/services/index.js"></script>

<!-- -->
<script src="/src/app/app.js"></script>
<!-- controllers -->
<script src="/src/app/footer/index.js"></script>
<script src="/src/app/header/index.js"></script>
<script src="/src/app/home/index.js"></script>
<script src="/src/app/auth/index.js"></script>
<script src="/src/app/login/index.js"></script>
<script src="/src/app/register/index.js"></script>
<script src="/src/app/user/index.js"></script>

<!--SCRIPTS END-->

<!--
  Client-side Templates
  ========================

  HTML templates are important prerequisites of modern, rich client applications.
  To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
  that you load these templates client-side.

  By default, your Gruntfile is configured to automatically load and precompile
  client-side JST templates in your `assets/templates` folder, then
  include them here automatically (between TEMPLATES and TEMPLATES END).

  To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
  For example, here are a few things you could do:

    + Import templates from other directories
    + Use a different template engine (handlebars, jade, dust, etc.)
    + Internationalize your client-side templates using a server-side
      stringfile before they're served.
    -->

<!--TEMPLATES-->
<script type="text/javascript" src="/templates.js"></script>
<!--TEMPLATES END-->

<script>document.write('<script src="http://' + (location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1"></' + 'script>')</script>

</body>
</html>
